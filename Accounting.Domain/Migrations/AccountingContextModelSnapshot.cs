// <auto-generated />
using System;
using Accounting.Domain.EFContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Accounting.Domain.Migrations
{
    [DbContext(typeof(AccountingContext))]
    partial class AccountingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Accounting.Domain.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DismissalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c890c92c-7826-48dd-a4b0-0c88bdd978ee"),
                            AppointmentDate = new DateTime(2019, 7, 23, 12, 16, 6, 775, DateTimeKind.Local).AddTicks(4997),
                            FirstName = "Boris",
                            IsDeleted = false,
                            LastName = "Boguslavskiy",
                            Salary = 5000m
                        },
                        new
                        {
                            Id = new Guid("327265bc-9211-4696-8b72-8b9c609e3b38"),
                            AppointmentDate = new DateTime(2018, 7, 23, 12, 16, 6, 777, DateTimeKind.Local).AddTicks(6098),
                            FirstName = "Ivan",
                            IsDeleted = false,
                            LastName = "Ivanovich",
                            Salary = 2000m
                        },
                        new
                        {
                            Id = new Guid("e50ffdcc-90e2-41c6-aef4-e9f0ad6261d3"),
                            AppointmentDate = new DateTime(2014, 7, 23, 12, 16, 6, 777, DateTimeKind.Local).AddTicks(6152),
                            DismissalDate = new DateTime(2020, 5, 23, 12, 16, 6, 777, DateTimeKind.Local).AddTicks(6158),
                            FirstName = "Anton",
                            IsDeleted = false,
                            LastName = "Antonovich",
                            Salary = 9999m
                        });
                });

            modelBuilder.Entity("Accounting.Domain.Entities.Position", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b4b007c6-fe83-4ae4-a504-a0c4dc5891d8"),
                            IsDeleted = false,
                            Name = "Junior .NET Full-stack"
                        },
                        new
                        {
                            Id = new Guid("33562529-4f2e-41b4-86fe-ce2165e61a8c"),
                            IsDeleted = false,
                            Name = "Middle .NET Full-stack"
                        },
                        new
                        {
                            Id = new Guid("3814ee6b-253f-4be6-ab75-af7b4dd54c86"),
                            IsDeleted = false,
                            Name = "Senior .NET Back-end"
                        });
                });

            modelBuilder.Entity("Accounting.Domain.Entities.PositionEmployee", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PositionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("EmployeeId", "PositionId");

                    b.HasIndex("PositionId");

                    b.ToTable("PositionEmployees");

                    b.HasData(
                        new
                        {
                            EmployeeId = new Guid("c890c92c-7826-48dd-a4b0-0c88bdd978ee"),
                            PositionId = new Guid("b4b007c6-fe83-4ae4-a504-a0c4dc5891d8"),
                            Id = new Guid("dfd5ea15-f796-4579-9aad-45a2dbd0e2d2"),
                            IsDeleted = false
                        },
                        new
                        {
                            EmployeeId = new Guid("327265bc-9211-4696-8b72-8b9c609e3b38"),
                            PositionId = new Guid("33562529-4f2e-41b4-86fe-ce2165e61a8c"),
                            Id = new Guid("acdd9f99-4c04-4f26-b408-e6c4fee59fa3"),
                            IsDeleted = false
                        },
                        new
                        {
                            EmployeeId = new Guid("e50ffdcc-90e2-41c6-aef4-e9f0ad6261d3"),
                            PositionId = new Guid("3814ee6b-253f-4be6-ab75-af7b4dd54c86"),
                            Id = new Guid("dc7b86c5-9869-4b98-af35-c02db3105795"),
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Accounting.Domain.Entities.PositionEmployee", b =>
                {
                    b.HasOne("Accounting.Domain.Entities.Employee", "Employee")
                        .WithMany("Positions")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Accounting.Domain.Entities.Position", "Position")
                        .WithMany("Employees")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
